version: 2
jobs:
  build:
    docker:
      - image: debian:stretch

    steps:
      - checkout

      - run: 
          name: "Setup dynamic encrypted .env variable (defaults to env.enc)"
          command: |
            echo 'export MY_ENV_VAR="${ENVVAR:-env}"' >> $BASH_ENV # Redirect MY_ENV_VAR into $BASH_ENV

      - run:
          name: Greeting
          command: |
            echo '"${ENVVAR:-env}".enc is here.'

      - run:
          name: Print the Current Time
          command: date
  docker_build:
    docker:
      # using custom image, see .circleci/images/primary/Dockerfile
      - image: circleci/node:8.9.0
    working_directory: ~/project

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - setup_remote_docker

      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - run:
          name: Build service
          command: make

      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose up -d
            # docker-compose will start 2 containers, the one with service will be named `contacts`
            # we start another container with curl in the same network as `contacts`, this way we have
            # all exposed ports from `contacts` available on `localhost` in this new container
            # docker run --network container:contacts \
            #   appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080/contacts/test
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
workflows:
  version: 2
  docker_compose_build:
    jobs:
      - docker_build